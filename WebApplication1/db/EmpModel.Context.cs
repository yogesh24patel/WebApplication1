//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication1.db
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PracmvcEntities : DbContext
    {
        public PracmvcEntities()
            : base("name=PracmvcEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<designation> designations { get; set; }
        public virtual DbSet<employee> employees { get; set; }
    
        public virtual int deleteemployee(Nullable<int> empid)
        {
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteemployee", empidParameter);
        }
    
        public virtual int insertemployeedata(string empname, Nullable<bool> gender, Nullable<int> designationid, string empemail, Nullable<decimal> empsalary, Nullable<System.DateTime> date)
        {
            var empnameParameter = empname != null ?
                new ObjectParameter("empname", empname) :
                new ObjectParameter("empname", typeof(string));
    
            var genderParameter = gender.HasValue ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(bool));
    
            var designationidParameter = designationid.HasValue ?
                new ObjectParameter("designationid", designationid) :
                new ObjectParameter("designationid", typeof(int));
    
            var empemailParameter = empemail != null ?
                new ObjectParameter("empemail", empemail) :
                new ObjectParameter("empemail", typeof(string));
    
            var empsalaryParameter = empsalary.HasValue ?
                new ObjectParameter("empsalary", empsalary) :
                new ObjectParameter("empsalary", typeof(decimal));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertemployeedata", empnameParameter, genderParameter, designationidParameter, empemailParameter, empsalaryParameter, dateParameter);
        }
    
        public virtual ObjectResult<selectemployeedata_Result> selectemployeedata(Nullable<int> empid)
        {
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectemployeedata_Result>("selectemployeedata", empidParameter);
        }
    
        public virtual ObjectResult<selectemployeeedesignation_Result> selectemployeeedesignation()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectemployeeedesignation_Result>("selectemployeeedesignation");
        }
    
        public virtual int updateemployeedata(Nullable<int> empid, string empname, Nullable<bool> gender, Nullable<int> designationid, string empemail, Nullable<decimal> empsalary, Nullable<System.DateTime> date)
        {
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(int));
    
            var empnameParameter = empname != null ?
                new ObjectParameter("empname", empname) :
                new ObjectParameter("empname", typeof(string));
    
            var genderParameter = gender.HasValue ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(bool));
    
            var designationidParameter = designationid.HasValue ?
                new ObjectParameter("designationid", designationid) :
                new ObjectParameter("designationid", typeof(int));
    
            var empemailParameter = empemail != null ?
                new ObjectParameter("empemail", empemail) :
                new ObjectParameter("empemail", typeof(string));
    
            var empsalaryParameter = empsalary.HasValue ?
                new ObjectParameter("empsalary", empsalary) :
                new ObjectParameter("empsalary", typeof(decimal));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateemployeedata", empidParameter, empnameParameter, genderParameter, designationidParameter, empemailParameter, empsalaryParameter, dateParameter);
        }
    }
}
